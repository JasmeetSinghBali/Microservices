basePath: /
consumes:
    - application/json
definitions:
    GenericError:
        description: generic error returned by the server
        properties:
            message:
                type: string
                x-go-name: Message
        type: object
        x-go-package: github.com/Jasmeet-1998/Microservices/intermediate-go-microservices/gorilla_restfull_microservice/handlers
    Product:
        description: |-
            Donuts
            Product defines the DTO/structure of the API product
        properties:
            description:
                type: string
                x-go-name: Description
            glaze:
                type: string
                x-go-name: Glaze
            id:
                description: the id of the user
                format: int64
                minimum: 1
                type: integer
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            price:
                format: float
                type: number
                x-go-name: Price
        required:
            - id
        type: object
        x-go-package: github.com/Jasmeet-1998/Microservices/intermediate-go-microservices/gorilla_restfull_microservice/data
    ValidationError:
        description: collection/slice of validation error messages of type string
        properties:
            messages:
                items:
                    type: string
                type: array
                x-go-name: Messages
        type: object
        x-go-package: github.com/Jasmeet-1998/Microservices/intermediate-go-microservices/gorilla_restfull_microservice/handlers
info:
    description: Documentation for Product API
    title: of Product API
    version: 1.0.0
paths:
    /products:
        get:
            description: Returns a list of products
            operationId: listProducts
            responses:
                "200":
                    $ref: '#/responses/productsResponse'
            tags:
                - products
        post:
            description: Create a new product
            operationId: createProduct
            responses:
                "200":
                    $ref: '#/responses/productResponse'
                "422":
                    $ref: '#/responses/errorValidation'
                "501":
                    $ref: '#/responses/errorResponse'
            tags:
                - products
        put:
            description: Update a product via id
            operationId: updateProduct
            responses:
                "201":
                    $ref: '#/responses/noContentReponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "422":
                    $ref: '#/responses/errorValidation'
            tags:
                - products
    /products/{id}:
        delete:
            description: Delete a product via id
            operationId: deleteProduct
            parameters:
                - description: The id of the product to be deleted from db
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "201":
                    $ref: '#/responses/noContentResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "501":
                    $ref: '#/responses/errorResponse'
            tags:
                - products
produces:
    - application/json
responses:
    errorResponse:
        description: Generic error message returned as string
        schema:
            $ref: '#/definitions/GenericError'
    errorValidation:
        description: Validation errors defined as an array of strings
        schema:
            $ref: '#/definitions/ValidationError'
    noContentResponse:
        description: No content is returned when product is updated or deleted
    productResponse:
        description: single product returned in the response
        schema:
            $ref: '#/definitions/Product'
    productsResponse:
        description: A list of products returns in the response
        schema:
            items:
                $ref: '#/definitions/Product'
            type: array
schemes:
    - http
swagger: "2.0"
